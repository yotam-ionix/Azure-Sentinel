Parser:
  Title: User Management ASIM filtering parser
  Version: '0.1.0'
  LastUpdated: 16 Jul, 2023
Product:
  Name: Source agnostic
Normalization:
  Schema: UserManagement
  Version: '0.1'
References:
- Title: ASIM UserManagement Schema
  Link: https://aka.ms/ASimUserManagementDoc
- Title: ASIM
  Link: https://aka.ms/AboutASIM
Description: |
  This ASIM parser supports normalizing User Management logs from all supported sources to the ASIM User Management normalized schema.
ParserName: imUserManagement
EquivalentBuiltInParser: _Im_UserManagement
Parsers:
  - _Im_UserManagement_Empty
  - _Im_UserManagement_MicrosoftSecurityEvent
ParserParams:
  - Name: starttime
    Type: datetime
    Default: datetime(null)
  - Name: endtime
    Type: datetime
    Default: datetime(null)
  - Name: targetusername_has
    Type: string
    Default: '*'
  - Name: actorusername_has
    Type: string
    Default: '*'
  - Name: targetdomain_has_any
    Type: dynamic
    Default: dynamic([])
  - Name: anydomain_has_any
    Type: dynamic    
    Default: dynamic([])
  - Name: pack
    Type: bool
    Default: false
ParserQuery: |
  let DisabledParsers=materialize(_GetWatchlist('ASimDisabledParsers') | where SearchKey in ('Any', 'ExcludevimUserManagement') | extend SourceSpecificParser=column_ifexists('SourceSpecificParser','') | distinct SourceSpecificParser | where isnotempty(SourceSpecificParser));
  let ASimBuiltInDisabled=toscalar('ExcludevimUserManagement' in (DisabledParsers) or 'Any' in (DisabledParsers)); 
  let parser=(
    starttime:datetime=datetime(null), 
    endtime:datetime=datetime(null),
    targetusername_has:string="*", 
    actorusername_has:string="",
    targetdomain_has_any:dynamic=dynamic([]),
    anydomain_has_any:dynamic=dynamic([]),
    pack:bool=false)
  {
  union isfuzzy=true
    vimUserManagementEmpty,
    vimUserManagementMicrosoftSecurityEvent(starttime, endtime, targetusername_has, actorusername_has, targetdomain_has_any, anydomain_has_any, ASimBuiltInDisabled or ('ExcludevimUserManagementMicrosoftSecurityEvent'      in (DisabledParsers) )),
    vimUserManagementCiscoISE(starttime, endtime, targetusername_has, actorusername_has, targetdomain_has_any, anydomain_has_any, ASimBuiltInDisabled or ('ExcludevimUserManagementCiscoISE'      in (DisabledParsers) ))
  }; 
  parser (
    starttime=starttime, 
    endtime=endtime, 
    targetusername_has=targetusername_has, 
    actorusername_has=actorusername_has, 
    targetdomain_has_any=targetdomain_has_any, 
    anydomain_has_any=anydomain_has_any, 
    hostname_has_any=hostname_has_any, 
    dvcaction=dvcaction, 
    eventresult=eventresult, 
    pack=pack
  )
